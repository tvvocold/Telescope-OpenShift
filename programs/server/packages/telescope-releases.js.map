{"version":3,"sources":["telescope-releases//home/action/workspace/Telescope/packages/telescope-releases/package-tap.i18n","telescope-releases/lib/releases.js","telescope-releases/lib/server/publications.js","telescope-releases/lib/server/import_releases.js","telescope-releases//home/action/workspace/Telescope/packages/telescope-releases/i18n/en.i18n.json"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oH;;AAEA,+D;AACA,gD;;;;;;;;;;;;;;;;;;;ACHA,6C;;AAEA,kB;AACA,4B;AACA,G;;AAEA,4C;;AAEA,4B;AACA,kB;AACA,wB;AACA,wB;AACA,uB;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;;ACdA,6C;AACA,+B;AACA,gE;AACA,G;AACA,Y;AACA,G;;;;;;;;;;;;;;;;;;ACLA,mC;AACA,kE;;AAEA,4C;;AAEA,e;AACA,qB;AACA,0B;AACA,4B;AACA,iB;AACA,K;AACA,6B;;AAEA,U;;AAEA,mF;AACA,oE;AACA,E;AACA,G;AACA,E;;AAEA,4B;AACA,E;AACA,0B;AACA,0B;AACA,0B;AACA,0B;AACA,0B;AACA,E;AACA,0F;AACA,4C;AACA,qE;AACA,G;;AAEA,G;;;;;;;;;;;;;;;;;;AClCA,6B;AACA,wC;AACA,qC;;AAEA,gC;AACA,yD;AACA,C;AACA,gD;AACA,yG","file":"/packages/telescope-releases.js","sourcesContent":["TAPi18n.packages[\"telescope-releases\"] = {\"translation_function_name\":\"__\",\"helper_name\":\"_\",\"namespace\":\"project\"};\n\n// define package's translation function (proxy to the i18next)\n__ = TAPi18n._getPackageI18nextProxy(\"project\");\n","Releases = new Meteor.Collection('releases');\n\nheroModules.push({\n  template: 'currentRelease'\n});\n\npreloadSubscriptions.push('currentRelease');\n\nMeteor.startup(function () {\n  Releases.allow({\n    insert: isAdminById,\n    update: isAdminById,\n    remove: isAdminById\n  });\n});\n","Meteor.publish('currentRelease', function() {\n  if(isAdminById(this.userId)){\n    return Releases.find({}, {sort: {createdAt: -1}, limit: 1});\n  }\n  return [];\n});","importRelease = function (number) {\n  var releaseNotes = Assets.getText(\"releases/\" + number + \".md\");\n\n  if (!Releases.findOne({number: number})) {\n\n    release = {\n      number: number,\n      notes: releaseNotes,\n      createdAt: new Date(),\n      read: false\n    }\n    Releases.insert(release);\n\n  } else {\n\n    // if release note already exists, update its content in case it's been updated\n    Releases.update({number: number}, {$set: {notes: releaseNotes}})\n  \n  }\n};\n\nMeteor.startup(function () {\n  \n  importRelease('0.11.0');\n  importRelease('0.11.1');\n  importRelease('0.12.0');\n  importRelease('0.13.0');\n  importRelease('0.14.0');\n  \n  // if this is before the first run, mark all release notes as read to avoid showing them\n  if (!Events.findOne({name: 'firstRun'})) {\n    var r = Releases.update({}, {$set: {read: true}}, {multi: true});\n  }\n\n});","var _ = Package.underscore._,\n    package_name = \"telescope-releases\",\n    namespace = \"telescope-releases\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \nTAPi18n.addResourceBundle(\"en\", namespace, {\"telescope_has_been_updated\":\"Telescope has been updated.\"});\n"]}