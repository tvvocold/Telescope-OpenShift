{"version":3,"sources":["telescope-api/lib/server/api.js","telescope-api/lib/server/routes.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kC;AACA,iB;AACA,gG;;AAEA,sG;AACA,gC;AACA,sB;AACA,uB;AACA,yD;AACA,yB;AACA,yB;AACA,c;AACA,mB;AACA,M;;AAEA,iB;AACA,kC;;AAEA,gB;AACA,yC;;AAEA,qD;AACA,2C;;AAEA,sB;;AAEA,oG;AACA,+B;AACA,0B;AACA,8B;AACA,8B;AACA,yB;AACA,+C;AACA,Q;AACA,uC;AACA,O;;AAEA,8B;;AAEA,+C;AACA,oC;AACA,oD;AACA,sD;AACA,c;AACA,qB;AACA,gD;AACA,mE;AACA,sC;AACA,S;AACA,O;AACA,O;;AAEA,wD;AACA,+B;AACA,O;;AAEA,mC;;AAEA,2B;AACA,K;;AAEA,+B;AACA,E;;;;;;;;;;;;;;;;;;;AC9DA,4B;;AAEA,uB;AACA,oB;AACA,yB;AACA,wB;AACA,8C;AACA,2C;AACA,0B;AACA,K;AACA,K;;AAEA,G","file":"/packages/telescope-api.js","sourcesContent":["serveAPI = function(limitSegment){\n  var posts = [];\n  var limit = typeof limitSegment === 'undefined' ? 20 : limitSegment // default limit: 20 posts\n\n  Posts.find({status: STATUS_APPROVED}, {sort: {postedAt: -1}, limit: limit}).forEach(function(post) {\n    var url = getPostLink(post);\n    var properties = {\n     title: post.title,\n     headline: post.title, // for backwards compatibility\n     author: post.author,\n     date: post.postedAt,\n     url: url,\n     guid: post._id\n    };\n\n    if(post.body)\n      properties.body = post.body;\n\n    if(post.url)\n      properties.domain = getDomain(url);\n\n    if(twitterName = getTwitterNameById(post.userId))\n      properties.twitterName = twitterName;\n\n    var comments = [];\n\n    Comments.find({postId: post._id}, {sort: {postedAt: -1}, limit: 50}).forEach(function(comment) {\n      var commentProperties = {\n       body: comment.body,\n       author: comment.author,\n       date: comment.postedAt,\n       guid: comment._id,\n       parentCommentId: comment.parentCommentId\n      };\n      comments.push(commentProperties);\n    });\n\n    var commentsToDelete = [];\n\n    comments.forEach(function(comment, index) {\n      if (comment.parentCommentId) {\n        var parent = comments.filter(function(obj) {\n          return obj.guid === comment.parentCommentId;\n        })[0];\n        if (parent) {\n          parent.replies = parent.replies || [];\n          parent.replies.push(JSON.parse(JSON.stringify(comment)));\n          commentsToDelete.push(index)\n        }\n      }\n    });\n\n    commentsToDelete.reverse().forEach(function(index) {\n      comments.splice(index,1);\n    });\n\n    properties.comments = comments;\n\n    posts.push(properties);\n  });\n\n  return JSON.stringify(posts);\n};\n","Meteor.startup(function () {\n\n  Router.route('api', {\n    where: 'server',\n    path: '/api/:limit?',\n    action: function() {\n      var limit = parseInt(this.params.limit);\n      this.response.write(serveAPI(limit));\n      this.response.end();\n    }\n  });\n\n});"]}