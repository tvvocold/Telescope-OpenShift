{"version":3,"sources":["telescope-search/lib/search.js","telescope-search/lib/server/log_search.js","telescope-search/lib/server/publications.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uC;AACA,iB;AACA,qB;AACA,Y;AACA,G;;AAEA,gB;AACA,sB;AACA,uB;AACA,kD;AACA,G;;;AAGA,8C;AACA,4B;AACA,U;AACA,mB;AACA,oB;AACA,M;AACA,gB;AACA,gB;AACA,M;AACA,c;AACA,kB;AACA,K;AACA,I;AACA,G;;AAEA,2B;AACA,kB;AACA,uB;AACA,uB;AACA,K;AACA,G;;AAEA,8B;AACA,0D;AACA,sF;AACA,wD;AACA,0B;;AAEA,qD;AACA,W;AACA,Y;AACA,sD;AACA,oD;AACA,oD;AACA,O;AACA,K;AACA,K;AACA,oB;AACA,C;;;;;;;;;;;;;;;;;;;ACnDA,oC;AACA,mB;AACA,0B;AACA,oB;AACA,K;AACA,E;;AAEA,gB;AACA,iC;AACA,kC;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;ACXA,4C;AACA,uD;AACA,+B;AACA,mE;AACA,G;AACA,Y;AACA,G","file":"/packages/telescope-search.js","sourcesContent":["// push \"search\" template to primaryNav\nprimaryNav.push({\n  template: 'search',\n  order: 100\n});\n\nadminMenu.push({\n  route: 'searchLogs',\n  label: 'search_logs',\n  description: 'see_what_people_are_searching_for'\n});\n\n\nSearches = new Meteor.Collection(\"searches\", {\n  schema: new SimpleSchema({\n    _id: {\n      type: String,\n      optional: true\n    },\n    timestamp: {\n      type: Date\n    },\n    keyword: {\n      type: String\n    }\n  })\n});\n\nMeteor.startup(function() {\n  Searches.allow({\n    update: isAdminById\n  , remove: isAdminById\n  });\n});\n\n// search post list parameters\nviewParameters.search = function (terms, baseParameters) {\n  // if query is empty, just return parameters that will result in an empty collection\n  if(typeof terms.query === 'undefined' || !terms.query)\n    return {find:{_id: 0}}\n\n  var parameters = deepExtend(true, baseParameters, {\n    find: {\n      $or: [\n        {title: {$regex: terms.query, $options: 'i'}},\n        {url: {$regex: terms.query, $options: 'i'}},\n        {body: {$regex: terms.query, $options: 'i'}}\n      ]\n    }\n  });\n  return parameters;\n}\n","var logSearch = function (keyword) {\n  Searches.insert({\n    timestamp: new Date(),\n    keyword: keyword\n  });\n};\n\nMeteor.methods({\n  logSearch: function (keyword) {\n    logSearch.call(this, keyword);\n  }\n});","Meteor.publish('searches', function(limit) {\n  var limit = typeof limit === undefined ? 20 : limit; \n  if(isAdminById(this.userId)){\n   return Searches.find({}, {limit: limit, sort: {timestamp: -1}});\n  }\n  return [];\n});"]}