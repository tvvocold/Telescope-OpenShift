{"version":3,"file":"/packages/miro:mailchimp.js","sources":["miro:mailchimp/lib/server/mailchimp.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,4C;AACA,M;AACA,qB;AACA,6B;AACA,oC;AACA,K;AACA,iD;AACA,G;AACA,G;;AAEA,0C;AACA,yB;AACA,wD;AACA,0B;AACA,6C;AACA,I;AACA,I;;AAEA,Y;;;AAGA,oE;AACA,4D;;AAEA,yB;AACA,U;AACA,wB;AACA,yE;AACA,I;AACA,E;;AAEA,wC;;AAEA,yC;AACA,0B;AACA,0B;AACA,G;AACA,E;;AAEA,4E;AACA,uE;;AAEA,4C;AACA,E;;AAEA,gB;AACA,oE;AACA,gB;;AAEA,O;AACA,4E;AACA,qB;AACA,sE;AACA,G;;AAEA,0B;;AAEA,sB;AACA,gB;AACA,6C;AACA,kD;AACA,K;AACA,U;AACA,W;AACA,G;;AAEA,oD;AACA,E;AACA,G","sourcesContent":["var getSettingsValueFor = function ( key ) {\n\t\tif (\n\t\t\tMeteor.settings &&\n\t\t\tMeteor.settings.private &&\n\t\t\tMeteor.settings.private.MailChimp\n\t\t) {\n\t\t\treturn Meteor.settings.private.MailChimp[key];\n\t\t}\n\t};\n\nMailChimp = function ( apiKey, options ) {\n\tvar mailChimpOptions = {\n\t\t\t'apiKey' : apiKey || getSettingsValueFor( 'apiKey' ),\n\t\t\t'options': options || {\n\t\t\t\t'version': '2.0'\t// Living on The Edge ;)\n\t\t\t}\n\t\t},\n\n\t\tmailChimp;\n\n\n\tif ( !mailChimpOptions.apiKey || mailChimpOptions.apiKey === '' ) {\n\t\tconsole.error( '[MailChimp] Error: No API Key defined!' );\n\n\t\tthrow new Meteor.Error(\n\t\t\t'1337',\n\t\t\t'No API Key defined',\n\t\t\t'Define your API Key either in settings.json file or in a method call'\n\t\t);\n\t}\n\n\tmailChimp = Npm.require( 'mailchimp' );\n\n\tthis._asyncAPI = mailChimp.MailChimpAPI(\n\t\tmailChimpOptions.apiKey,\n\t\tmailChimpOptions.options\n\t);\n};\n\nMailChimp.prototype.call = function ( section, method, options, callback ) {\n\tvar wrapped = Meteor.wrapAsync( this._asyncAPI.call, this._asyncAPI );\n\n\treturn wrapped( section, method, options );\n};\n\nMeteor.methods({\n\t'MailChimp': function ( clientOptions, section, method, options ) {\n\t\tvar mailChimp;\n\n\t\ttry {\n\t\t\tmailChimp = new MailChimp( clientOptions.apiKey, clientOptions.options );\n\t\t} catch ( error ) {\n\t\t\tthrow new Meteor.Error( error.error, error.reason, error.details );\n\t\t}\n\n\t\toptions = options || {};\n\n\t\tswitch ( section ) {\n\t\t\tcase 'lists':\n\t\t\t\tif ( !options.id || options.id === '' ) {\n\t\t\t\t\toptions.id = getSettingsValueFor( 'listId' );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\n\t\treturn mailChimp.call( section, method, options );\n\t}\n});\n"]}