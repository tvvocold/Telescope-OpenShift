{"version":3,"sources":["telescope-invites//home/action/workspace/Telescope/packages/telescope-invites/package-tap.i18n","telescope-invites/lib/invites.js","telescope-invites/lib/server/invites.js","telescope-invites/lib/server/publications.js","telescope-invites//home/action/workspace/Telescope/packages/telescope-invites/i18n/de.i18n.json","telescope-invites//home/action/workspace/Telescope/packages/telescope-invites/i18n/en.i18n.json","telescope-invites//home/action/workspace/Telescope/packages/telescope-invites/i18n/es.i18n.json","telescope-invites//home/action/workspace/Telescope/packages/telescope-invites/i18n/fr.i18n.json","telescope-invites//home/action/workspace/Telescope/packages/telescope-invites/i18n/it.i18n.json","telescope-invites//home/action/workspace/Telescope/packages/telescope-invites/i18n/zh-CN.i18n.json"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mH;;AAEA,+D;AACA,gD;;;;;;;;;;;;;;;;;;;ACHA,iC;AACA,Q;AACA,iB;AACA,kB;AACA,I;AACA,mB;AACA,iB;AACA,kB;AACA,I;AACA,qB;AACA,iB;AACA,mC;AACA,I;AACA,a;AACA,kB;AACA,kB;AACA,G;AACA,G;;AAEA,2C;AACA,mC;;AAEA,4C;;AAEA,c;AACA,qC;AACA,qC;AACA,oC;AACA,G;;AAEA,sB;AACA,0B;AACA,U;AACA,G;;AAEA,qC;AACA,gD;AACA,wD;AACA,c;AACA,C;AACA,8C;;AAEA,gC;AACA,sC;AACA,0D;AACA,yC;AACA,wE;AACA,e;AACA,4E;AACA,M;AACA,6B;AACA,wB;AACA,iC;AACA,gD;AACA,S;;AAEA,0C;AACA,uB;AACA,U;AACA,K;AACA,G;AACA,c;AACA,C;AACA,0C;;;;;;;;;;;;;;;;;;;AC/DA,gB;;AAEA,mC;;AAEA,6C;AACA,+B;AACA,yE;;AAEA,iE;AACA,uE;;AAEA,kC;AACA,oC;AACA,yB;AACA,O;;AAEA,4C;AACA,uG;AACA,4D;AACA,+E;AACA,yB;AACA,oC;AACA,oD;AACA,mE;AACA,kD;;AAEA,6C;AACA,iC;AACA,qE;AACA,Y;AACA,iC;AACA,0E;AACA,O;;AAEA,kE;AACA,6E;;AAEA,2B;AACA,iF;AACA,O;;AAEA,yB;AACA,8E;AACA,sB;AACA,wC;AACA,oC;AACA,6C;AACA,S;;AAEA,8B;AACA,6F;;AAEA,e;AACA,8B;AACA,8C;AACA,0B;AACA,qC;AACA,oD;AACA,Y;AACA,O;;AAEA,0D;AACA,iE;AACA,6B;AACA,kD;AACA,0C;AACA,gE;AACA,oD;AACA,mD;AACA,Y;;AAEA,qC;AACA,gG;AACA,Y;;AAEA,K;;AAEA,Y;AACA,2C;AACA,M;AACA,G;AACA,G;;;;;;;;;;;;;;;;;;ACjFA,6C;AACA,sD;AACA,0E;AACA,G;;;;;;;;;;;;;;;;;;ACHA,6B;AACA,uC;AACA,oC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,0F;;;;;;;;;;;;;;;;;;;ACfA,6B;AACA,uC;AACA,oC;;AAEA,gC;AACA,yD;AACA,C;AACA,gD;AACA,qF;;;;;;;;;;;;;;;;;;;ACRA,6B;AACA,uC;AACA,oC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,0F;;;;;;;;;;;;;;;;;;;ACfA,6B;AACA,uC;AACA,oC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,0F;;;;;;;;;;;;;;;;;;;ACfA,6B;AACA,uC;AACA,oC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,0F;;;;;;;;;;;;;;;;;;;ACfA,6B;AACA,uC;AACA,oC;;AAEA,gC;AACA,yD;AACA,C;AACA,kD;AACA,qC;AACA,C;;AAEA,6D;AACA,gD;AACA,C;;AAEA,6F","file":"/packages/telescope-invites.js","sourcesContent":["TAPi18n.packages[\"telescope-invites\"] = {\"translation_function_name\":\"__\",\"helper_name\":\"_\",\"namespace\":\"project\"};\n\n// define package's translation function (proxy to the i18next)\n__ = TAPi18n._getPackageI18nextProxy(\"project\");\n","InviteSchema = new SimpleSchema({\n  _id: {\n    type: String,\n    optional: true\n  },\n  invitingUserId: {\n    type: String,\n    optional: true\n  },\n  invitedUserEmail: {\n    type: String,\n    regEx: SimpleSchema.RegEx.Email\n  },\n  accepted: {\n    type: Boolean,\n    optional: true\n  }\n});\n\nInvites = new Meteor.Collection(\"invites\");\nInvites.attachSchema(InviteSchema);\n\n// invites are managed through Meteor method\n\nInvites.deny({\n  insert: function(){ return true; },\n  update: function(){ return true; },\n  remove: function(){ return true; }\n});\n\nuserProfileEdit.push({\n  template: 'userInvites',\n  order: 2\n});\n\n function setStartingInvites (user) {\n  // give new users a few invites (default to 3)\n  user.inviteCount = getSetting('startInvitesCount', 3);\n  return user;\n}\nuserCreatedCallbacks.push(setStartingInvites);\n\nfunction checkIfInvited (user) {\n  // if the new user has been invited \n  // set her status accordingly and update invitation info\n  if(invitesEnabled() && getEmail(user)){\n    var invite = Invites.findOne({ invitedUserEmail : getEmail(user) });\n    if(invite){\n      var invitedBy = Meteor.users.findOne({ _id : invite.invitingUserId });\n      \n      user = _.extend(user, {\n        isInvited: true,\n        invitedBy: invitedBy._id,\n        invitedByName: getDisplayName(invitedBy)\n      });\n\n      Invites.update(invite._id, {$set : {\n        accepted : true\n      }});\n    }\n  }\n  return user;\n}\nuserCreatedCallbacks.push(checkIfInvited);\n","Meteor.methods({\n\n  inviteUser: function(invitation){\n\n    // invite user returns the following hash\n    // { newUser : true|false }\n    // newUser is true if the person being invited is not on the site yet\n\n    // invitation can either contain userId or an email address :\n    // { invitedUserEmail : 'bob@gmail.com' } or { userId : 'user-id' }\n\n    check(invitation, Match.OneOf(\n      { invitedUserEmail : String },\n      { userId : String }\n    ));\n\n    var user = invitation.invitedUserEmail ?\n          Meteor.users.findOne({ emails : { $elemMatch: { address: invitation.invitedUserEmail } } }) :\n          Meteor.users.findOne({ _id : invitation.userId }),\n        userEmail = invitation.invitedUserEmail ? invitation.invitedUserEmail :\n          getEmail(user),\n        currentUser = Meteor.user(),\n        currentUserCanInvite = currentUserIsAdmin ||\n          (currentUser.inviteCount > 0 && can.invite(currentUser)),\n        currentUserIsAdmin = isAdmin(currentUser);\n\n    // check if the person is already invited\n    if(user && can.invite(user)){\n      throw new Meteor.Error(403, \"This person is already invited.\");\n    } else {\n      if (!currentUserCanInvite){\n        throw new Meteor.Error(701, \"You can't invite this user, sorry.\");\n      }\n\n      // don't allow duplicate multpile invite for the same person\n      var existingInvite = Invites.findOne({ invitedUserEmail : userEmail });\n\n      if (existingInvite) {\n        throw new Meteor.Error(403, \"Somebody has already invited this person.\");\n      }\n\n      // create an invite\n      // consider invite accepted if the invited person has an account already\n      Invites.insert({\n        invitingUserId: Meteor.userId(),\n        invitedUserEmail: userEmail,\n        accepted: typeof user !== \"undefined\"\n      });\n\n      // update invinting user\n      Meteor.users.update(Meteor.userId(), {$inc:{inviteCount: -1}, $inc:{invitedCount: 1}});\n\n      if(user){\n        // update invited user\n        Meteor.users.update(user._id, {$set: {\n          isInvited: true,\n          invitedBy: Meteor.userId(),\n          invitedByName: getDisplayName(currentUser)\n        }});\n      }\n\n      var communityName = getSetting('title','Telescope'),\n          emailSubject = 'You are invited to try '+communityName,\n          emailProperties = {\n            newUser : typeof user === 'undefined',\n            communityName : communityName,\n            actionLink : user ? getSigninUrl() : getSignupUrl(),\n            invitedBy : getDisplayName(currentUser),\n            profileUrl : getProfileUrl(currentUser)\n          };\n\n      Meteor.setTimeout(function () {\n        buildAndSendEmail(userEmail, emailSubject, getTemplate('emailInvite'), emailProperties);\n      }, 1);\n\n    }\n\n    return {\n      newUser : typeof user === 'undefined'\n    };\n  }\n});","Meteor.publish('invites', function (userId) {\n  var invites = Invites.find({invitingUserId: userId})\n  return (this.userId === userId || isAdmin(Meteor.user())) ? invites : []\n});","var _ = Package.underscore._,\n    package_name = \"telescope-invites\",\n    namespace = \"telescope-invites\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"de\"])) {\n  TAPi18n.translations[\"de\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"de\"][namespace])) {\n  TAPi18n.translations[\"de\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"de\"][namespace], {\"translation_key\":\"translation string\"});\n","var _ = Package.underscore._,\n    package_name = \"telescope-invites\",\n    namespace = \"telescope-invites\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \nTAPi18n.addResourceBundle(\"en\", namespace, {\"translation_key\":\"translation string\"});\n","var _ = Package.underscore._,\n    package_name = \"telescope-invites\",\n    namespace = \"telescope-invites\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"es\"])) {\n  TAPi18n.translations[\"es\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"es\"][namespace])) {\n  TAPi18n.translations[\"es\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"es\"][namespace], {\"translation_key\":\"translation string\"});\n","var _ = Package.underscore._,\n    package_name = \"telescope-invites\",\n    namespace = \"telescope-invites\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"fr\"])) {\n  TAPi18n.translations[\"fr\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"fr\"][namespace])) {\n  TAPi18n.translations[\"fr\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"fr\"][namespace], {\"translation_key\":\"translation string\"});\n","var _ = Package.underscore._,\n    package_name = \"telescope-invites\",\n    namespace = \"telescope-invites\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"it\"])) {\n  TAPi18n.translations[\"it\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"it\"][namespace])) {\n  TAPi18n.translations[\"it\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"it\"][namespace], {\"translation_key\":\"translation string\"});\n","var _ = Package.underscore._,\n    package_name = \"telescope-invites\",\n    namespace = \"telescope-invites\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"zh-CN\"])) {\n  TAPi18n.translations[\"zh-CN\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"zh-CN\"][namespace])) {\n  TAPi18n.translations[\"zh-CN\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"zh-CN\"][namespace], {\"translation_key\":\"translation string\"});\n"]}